# See: https://github.com/wangyoucao577/go-release-action
# See: https://github.com/marketplace/actions/go-release-binaries
##
on:
  release:
    types: [created]

  # See: https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/
  workflow_dispatch:

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, linux/arm, darwin/amd64, darwin/arm64
        ##
        # GOOS=linux GOARCH=arm GOARM=5 go build
        goos: [linux, darwin]
        goarch: ["386", amd64, arm64, arm]
        # for 32bit ARM, we have the GOARM env var that specifies which specific version of the architecture
        # See: https://zchee.github.io/golang-wiki/GoArm/#supported-architectures
        ##
        # include:
        #   - goarch: "386"
        #     goos: arm
        #     goarm: 5
        #   - goarch: "386"
        #     goos: arm
        #     goarm: 6
        #   - goarch: "386"
        #     goos: arm
        #     goarm: 7
        # No 32 bit intel or ARM builds for macOS platforms
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: "arm"
            goos: darwin
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.29
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.17
          project_path: "./cmd/apcupsd_exporter"
          #build_flags: GOARM=${{ matrix.goarch }}
          # Publish sha hashes, not md5
          md5sum: false
          sha256sum: true
          # The release name needs to include the GOARM version
          asset_name: ${BINARY_NAME}-${RELEASE_TAG}-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.goarm }}

          #binary-name-${{ matrix.goos }}-${{ matrix.goarch }}.
